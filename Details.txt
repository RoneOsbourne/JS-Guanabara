= 'recebe'
após variavel receber valor, diz-se que foi atribuido
Em string pode usar "", '' e ``
Nome de variavel = identificador
JS não diferencia numeros inteiros de float, todos são numbers

Prompt transforma input em string por padrão
Para receber numeros para calculos, fazer o Number.parseInt na entrada dos dados

Templates Strings = `Eu estou aprendendo ${s}`
-> Para usar template string, deve-se usar crase.
-> O conjunto '${}' chama-se placeholder (espaço reservado)

var s = 'Javascript'
'Eu estou aprendendo' + s //faz concatenação
`Eu estou aprendendo ${s}` // usa template string
s.lenght // quantos caracteres tem a string
s.toUpperCase //caixa alta
s.toLowerCase //caixa baixa

var n1 = 1545.5
n1.toFixed(2) //aumenta para 2 casa decimais
n1.toFixed(2).replace('.' , ',') //altera de . para ,

n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) //para inserir sifrão da moeda
n1.toLocaleString('pt-BR', {style: 'currency', currency: 'USD'}) //para dolar
n1.toLocaleString('pt-BR', {style: 'currency', currency: 'EUR'}) //para euro

5 / 2 = 2.5
5 % 2 = 1 (resto de operação)
5 ** 2 = 25 (eleva ao quadrado)

Regra de precedencia matematica do JS

() - parenteses
** - potencialização
* / % - multiplicação, divisão e resto da divisão
+ - soma e substração

AUTO ATRIBUIÇÃO
var n = 3
n = n + 4 //7

ou 
n += 4 //7
n -= 3 //0
n *= 2 //6

OPERADOR DE INCREMENTO
var n = 10
n++ //mostra n e faz um incremento
n //mostra n atual = 11

n-- //mostra n (11) e faz decremento
n //mostra n atual (10)

++n //faz incremento e mostra n

IDENTIDADE
5 == 5 //true
5 == '5' //true
5 === '5' //false - avalia o valor e o tipo (identificador restrito)

LÓGICOS
! negação (not)
&& conjunção (and)
|| disjunção (ou)

-> Em uma mesma sentença (a > b && b % 2 == 0)
PRIMEIRO OPERADORES ARITMETICOS
SEGUNDO OPERADORES RELACIONAIS
TERCEIRO OPERADORES LOGICOS

-> Ordem dos operadores logicos
NÃO (!)
E (&&)
OU (||)

OPERADOR TERNARIO (dentro mesma expressão)
teste ? true : false
?
:

faz o teste, mostra resultado em caso positivo, senão negativo

COMANDOS GIT
Analisando diferenças: git diff
Avaliando alterações: git log
Visualizando objetos: git show
Guardando alterações temporariamente: git stash
Copiando e colando commits: git cherry-pick
